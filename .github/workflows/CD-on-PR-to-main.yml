# Description     :: Production Continous Deployment(CD) workflow
## Trigger-action :: Execute on PR closure
### Target-Branch :: On merge to main branch
##### Target-Org  :: To Production environment

name: CD workflow mainBranch-to-Production Deployment
run-name: ${{ github.actor }} is testing mainBranch-to-Production Deployment ðŸš€
on:
  pull_request:
    types: [closed]
    branches:
      - main
      - master
    paths:
      - 'force-app/**'
      - 'vlocity/**'
jobs:
  build:
        runs-on: ubuntu-latest
        environment: Production
        steps:
          # Checkout the Source code from the latest commit
          # Make sure to specify fetch-depth:0. This allows us to
          # access previous commits that have been pushed to the repository.
          - uses: actions/checkout@v3
            with:
              fetch-depth: 0
          - name: Install NPM
            run: |
              npm install

          # Install the SFDX CLI using npm command
          - name: Install the SF CLI
            run: |
              npm install @salesforce/cli --global
              sf version

          # Install the Vlocity Build Tool using npm
          - name: Install the Vlocity Build
            run: |
              npm install --global vlocity
              vlocity help

          # Install the sfdx git delta
          - name: Install the sfdx-git-delta plugin
            run: |
              echo 'y' | sf plugins:install sfdx-git-delta

          # Install the npm  puppeteer
          - name: Install the npm puppeteer plugin
            run: |
              npm install puppeteer -g

          # Decrypt the private key for jwt auth
          - name: Decrypt the server.key.enc file & store inside assets folder
            run: |
              openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}

          # Authenticate to SF org
          - name: Authenticate Salesforce ORG
            run: |
             sf login org jwt -i ${{ secrets.ENV_CONSUMER_KEY }} -f ${{ secrets.JWT_KEY_FILE }} --username ${{ secrets.ENV_USER_NAME }} --alias MainProdOrg --instance-url ${{ secrets.ENV_LOGIN_URL }}

          # Generate a package.xml for delta components
          - name: Generate the package.xml for delta files
            run: |
             mkdir delta
             sf sgd:source:delta --to "HEAD" --from "HEAD~1" --output "./delta" --ignore-whitespace -d -i .sgdignore
             echo "--- package.xml generated with added and modified metadata ---"
             cat delta/package/package.xml
             echo "--- Files created in ./delta directory ---"
             ls -R delta

        # Reading TestClassMapper file to prepare list of testclasses to run using RunSpecified test
          - name: 'Retrieving the list of test classes to execute'
            run: |
              PR_BODY=$(cat TestClassMapper.txt)
              echo $PR_BODY > ./pr_body.txt
              node ./parsePR.js
              TESTS=$(cat testsToRun.txt)
              echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV

        # If TestclassMapper contains entries, then we run specified test entries only and if not we run all localtests in the target org
          - name: 'Deploy Delta changes to Prod - with run specified tests'
            if: ${{ env.APEX_TESTS != 'all' }}
            run: |
              echo ${{env.APEX_TESTS}}
              sf project deploy start -x delta/package/package.xml --test-level RunSpecifiedTests --tests ${{env.APEX_TESTS}} --json -o MainProdOrg --verbose

        # If the env variable equals all, we run all tests with real deployment to production
          - name: 'Deploy Delta changes to Prod - with run all tests'
            if: ${{ env.APEX_TESTS == 'all' }}
            run: |
              sf project deploy start -x delta/package/package.xml --test-level RunLocalTests  --json -o MainProdOrg --verbose

         # Execute the VBT packDeploy command to deploy SFI components, use -gitCheck=true for delta components only
          - name: Deploying SFI Delta components to Salesforce Prod Org
            run: |
              vlocity -sfdx.username ${{ secrets.ENV_USER_NAME }} -job deploy.yaml packDeploy -gitCheck=true  --verbose
